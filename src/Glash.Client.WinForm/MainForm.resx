<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="niMain.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAC6HQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAHWxJREFUeJztnQuQHVWZx4eXitb6KFRAI5Hc7pshaBCzpVU+CAoK6rJi
        KbIiigi4KGtlFxCR3ZWItRhg3S23yip1FwxLLNkpFAgzp+9kApMQQkCGzNxz7kzeJpBkZvKaJJNknnfS
        e76emdjpmTv39rnd/Z0+9/tX/WpSk8zkvP7fPd39na/r6kip1qyGF8+0WGGe7fAvWIx/23LEXZbDH7KZ
        eMRm/Gn55xcsJjbI728DbEf0AfJ7R+VXF5j48/j3J/6d/LkuyRr5e56S339Y/u4Hvd8t/w/5ez8P/yf8
        39j9J5GM14K2tjPmNHd8wMrlr5NmvV8a83HJS9KcvZMmRmO8Detke34PbbOdwtegrdBm7HEjkVIn+FS1
        nfwnpbHulJ+0/yuN1S4ZRjd6SKDN0Hbog9cX2SfaMZBIAZ2/kp8tPzmvkqZZLL+2SMMMYps3tqDAxKgM
        Bm3y6y/sJvHNOS2F87DHn0RKVAtbW0/PssInpCGWgBmk4Y9jGxN3p+Ddc/g1BEGLbX4j9vyQSJHLYvlZ
        coF/13b4cv/NNyIQDBg/Ajcd5aXDrfYz7e/FnjcSSVnZ5RvfCdtcb1vv8DFsc6UPPuY9wXDEorkrNrwH
        ez5JpLIC02edwm1y0a4m00cbDOSlUivsoupbus7CnmcS6SRlmvkCuI6Vi3UA3yymw4fk1wb59fI61z0F
        e+5JNarZjYVz5DXrD+Un0xZ8U9Qo42O/OJMT78NeD6QakcU6L5aLbpncjo6gG4DwmJiLx+zGwoew1wfJ
        UHmP7hh/ptYf2+nOROrzVXR5QKpa8MzeyvEb5fVmJ/bCJkLChLBZ4QaYQ+x1REqb7nVPlZ8k11iO2IS+
        kImqkLuB7XLX9p26hobTsJcVSXfJbeN4RhrvwF64RMSBwOFdkJcBwR17mZE0VCZXuFJ+4uexFyoReyBo
        l0H+s9jrjaSJ5qzotG3vuTL+4iQSDARMtEBNA+z1R0LS7Cfb327DgZzxxBL0BUmgBIEROJk4p6Xtbdjr
        kZSU5HW+3VS4RW4F92EvQEITmNgDT3vo0aHhktE+I6/zV6IvOEJL5Pp4fq6Tn4u9TkkRy3ue74hFdBSX
        qAA4z7F4XkPhDdjrlhSBvIM69FiPCA1fn3HyH8ZevyRVeck88lM/hfX0CD3wSpjJ3QAlEaVMUGtu/Ew+
        /iIiDICJF+1GPgd7XZMqEKTw2uM17vEXDmEQ/LC8lLwee32TSmh+c8db5EQtw18ohMnID5il5y5vezP2
        eif5lMkVLLnl59iLg6gNIGUcHiljr3uSFLymyqYtP5E4/HC2iV+Nvf5rV97JPf5DKr5JoDFeHGYJnTBM
        WOPX+3w5+gIgCICJp2BNYvuiJlTvdJ3rvVEHe9IJwgckm8ELYLD9YbQyTueFlsN3YE82QUyH5Yhddk5c
        hO0TI5Vl+cvkJ/8h7EkmiJmQH1D9UFwG2y9Gycrlr6My3ERagPTzbJO4Fts3RgjO7tOdfiKFFOWH1k3Y
        /km15AB+j8xPpBbGj8s1/I/YPkqlxp/xazCJBFElci3fi+2nVEkO2E+xJ40gIuYn2L5KhWwm/lmDySKI
        GOA/wvaX1pLXTN/HnySCiJEcvwPbZ1rKdvLfohdvEsYDa7ypcAu237QSPOenu/1EDVGkPIEJZRxxKdXt
        I2qN8cQ2fjm2/1AFr2aSg3EQezIIAgd+eG5T/oPYPkQRnOqjgz1ErQOvLz9/JT8b24+JCmqqSfO/hD34
        BKEFTLTVTj2Be91TqZgHQZyM5Ygna6KykIx292EPNkHoiNwV/yu2P2OVlRN/Q4/7CKIU0huMfx7bp7Fo
        zopO26Y7/gRRjj7jSo57RTyZEBoMLkFoD7x3wKiXj9j0xh6CCAcTj2D7NhLB+9TQB5Mg0ggTf4ft36qU
        yYn32fTWHoJQ5eD7GztnY/tYTfC8n/FWDQaRIFKLxcTzdQ0Np2HbObRk4/8Fe/AIwgTkZfTd2H4OpUwz
        X0BlvAkiGsBLFuu8GNvXFWlha+vpNhOvYg8aQZgEvHpsQVvbGdj+LivZ2HuwB4sgDOUH2P6eUfVNHVnZ
        yAENBoogTGQgkytY2D6fXq57iuXwZzUYJIIwF8ZbwWvYdp+i8Vd4aTBABGE4Vo7fiO33kzT7yfa3y0//
        fdgDQxBxMS9XQG/DCZjYM6el7W3Yvj8h2+H/iT4oBBEDX1izxW3efcC9Zt1W9Lb4sRh/ENv3nrI5Xk/P
        /AnTAOM/vfuge7j/qLulfwC9PUGgkjbcdMf2f53lCIY9GAQRFWD8J6Xxh0dG3X0HDrjF4ph7/4Zu9HZN
        C+NPo5of6pqjDwJBRMCk8ceOu+7A4KDbu2evNH/RHZHf+OizG9DbV4qMI67AcT889mO8A3sACKIa/MYH
        HTp82N3d0+uOSvODnJ7D6G2cESZeRXksmHH4V9E7TxCKBI0Pn/Z79u5zd3X3uCOjo+6kbnplO3pby8L4
        l5J1f0PDaZbDu9A7ThAhCRofNDQ05O6WxgfzD4+MnPh+7+CIW6/T479SMF5ItKS4vO74BnqnCSIE0xkf
        dLj/iPv6rt3urt3d7vDwyEl/98ute9HbXSnJvWwUPv2Z2IjdYYKohFLGHxsbc/fu3++Zf6c0/9DQ8El/
        D//8stWb0NtfKZYjNsFJ3Nj9D2mI2J0liHKUMj4ItvndPb0nzD84ODTl36zbfxS9D2GB+pvxut91T7Ed
        3ondUYIoxUzGBx05eswz/aT54ZHfdLq9Yyd6X8IidwE81icC0vxfwO4kQUxHOeMfP37cPdB30DP+JMcG
        Bqb9t/2jRXf+ik70PqkgL88/G18AYPw57A4ShJ9yxgeNjo66PXv2nmT+o8eOlfz3y147gN4vdXhzPObP
        iYtkADiO30GCqMz4INjiw+M9v/mPHD06489cvVavgz+haSx8KPoAwMTv0DtG1DyVGh8EWX1+4wP9R47M
        +DMb+wfR+1gtlsMfjdT8sxsL59CJPwKTMMafzOoLmv9wf3/Zn/1Jp6YHf0IAJwXnNHe8O7IAIK8rfoTd
        KaI2CWN80GRWX9D8Bw8dKvuzcPDnI892ofc5IiIqIAqP/hjfokGHiBoirPFBk1l9QfoOljc/qLH7EHq/
        owISgyJ5JJhl+cuwO0PUDirG92f1BYFHf5Xqhj+l4OBPGBrzl1QdAOT1xOPoHSGMR8X4IH9WXxAo6FGp
        dg0Mu3Nz+OMQMY9VZf76lq6z5PX/kAYdIQxF1fggf1bfFPPvP+Al/1SqX2zZgz4WkcP44HmN/B3KAcDO
        8X9A7wRhJNUYf7qsPj979+0PZX5ow8JVG9HHJBYY/45yALAcsRq9A4RRVGN80HRZfX7g8V8Y84PW7DuC
        Pi5xIT28Usn89U7XufIXFLE7QJhBtcYHTZfV56dXwfygRe2vo49PjBTPX8nPVvn0X6RB44mUE4XxQdNl
        9fmBXQE8DQirgyNF98LmFFT9qQKLie+FDgDy2mEtdsOJ9BKV8Utl9fnp7t3jle9W0dId+9HHKgFWhfv0
        Z/lZtsPHNGg4kTKiMj6oVFafH6jgW5yo4Kuiq17Ygj5m8cPH5q7Y8J4QAUB8D7/RRJqI0vigUll9QfOP
        VmF+cUi/N/7ERpinATJiLEdvMJEKojb+TFl9foLlu1X048Ju9PFLCssRf6zI/PMaCm+wGD+C3WBCb6I2
        PmimrL6g+f3lu1U0WBxzF6w05uBPWSyH94O3K/n0p9d9ESWJw/igmbL6TjL/NOW7VQR9wB7LpMk44tKy
        AUBe//8cu6GEfsRl/HJZfX6mK9+tqutf/jP6mCYO4w9UsgOgqr/ECeIyPqhcVl/Q/NOV71bRzoFhN6vB
        2CaNVzV4JkHGEHYjCT2I0/igcll9QfOXKt+top9v6kUfXxQYPz5jpSArJ76M3kgClbiNDyqX1RekVPlu
        FRXlJcclrYYe/KmAjJP/4kzb///AbiCBQxLGrySrL8hM5btV1Lq3H32sMbEYf3CGG4D8ZewGEsmShPFB
        lWT1BSlXvltFt61/DX3MUWF87bTmn9Xw4plQTRS9gUQiJGV8UCVZfUHKle9WUd+w+Qd/ysOHZrduf9PU
        7X9j/hL8xhFxk6TxK83qC1JJ+W4VPbx9H/r460C2SXx8agBg4k7shhHxkaTxQZVm9QWppHy3qj63ZjP6
        POhA1uG3T3MDUDyG3TAiepI2PqjSrL4glZbvVtH6g8fQ50IX5KX+0qk3AB2Rx24YER0Yxg+T1RckTPlu
        Fd0jdqHPiTYw8epJ5l/Q1nYG3QA0Awzjg8Jk9QUJU75bRQPFMffilnS+7jse+NDC1tbTTwSAuU35D+I3
        iqgGLON7BguR1TfF/CHLd6voiV196POjGxYrzPM///86doMINTCNDwqb1ecnbPluVV370jb0edKNbJO4
        1hcAxP3YDSLCgW18law+Pyrlu1W0/ehQTR78KYf80P+p7wYgvf4rLWAbH6SS1edHtXy3ih7Y2IM+Z1rC
        xO8oBThF6GB8kEpWnx/V8t0qgoM/H3tuA/rcaYk/JVhGgz3oDSKmRRfjq2b1+ammfLeKWvYcRp8/XZEf
        +t2e+ec3d7wFzgljN4g4GV2MD1LN6vNTbfluFf39qzvQ51FbpOe9MwEZp/NC9MYQJ9DJ+CDVrL6g+asp
        362ivUOj7gW5Wj/4MzNznfxceAPQ57EbQuhn/Gqy+vxEUb5bRb/athd9TnUnkytcWZd1xM3YDalldDM+
        qJqsvqD5qy3fraornqeDP+WwcvxGeAJwN3ZDahEdjQ+qJqvvJPNHVL5bRa/0HUWf35TwA8gBeEiDhtQM
        uhofVE1Wn58oy3er6C6+E32eU8ISeAT4iAYNMR6djV9tVl/Q/FGV71bRseKYe9EKOvhTCXL3/99wE/Bp
        7IaYjM7GB1Wb1Rc0f5Tlu1X0+OsH0Oc8LXjvC4SMIOyGmIjuxgdVm9UXJMry3ar6yrqt6HOfFiwmnqc3
        AUVMGowfRVZfkKjLd6to85Eh9PlPFUwIqAS0Db0hBpAG44OiyOoLEkf5bhXdv6EbfR2kCsY3Qy3AnegN
        STFpMT4oiqy+IHGU71bRiJyAjz5LB39CwfhrdBBIkTQZP6qsviBxle9WkdNDB3/Cw3sgABzCb0h6SJPx
        QVFl9QWJs3y3im5qo4M/CvTBJcCABg3RnrQZHxRVVl+QOMt3q6h3cMStp4M/KhyDAFDUoCHakkbjg6LK
        6gsSd/luFf1yKx38UaRIAaAEaTV+lFl9QeIu360imJ7LVm9CXy8ppUiXAAHSanxQlFl9U8yfQPluFa3b
        Twd/quAY3QScIM3GB0Wd1ecnqfLdKrojTwd/qqCv5h8Dpt34cWT1+UmqfLeK+keL7nw6+FMF8BiwRhOB
        0m58UBxZfX6SLN+tomWv0cGfqoBEoFpLBTbB+KA4svr8JFm+W1VXr6WDP1UxngpcG4eBTDF+XFl9fpIu
        362ijf2D6Gsq9YwfBuIvoDckRkwxPiiurD4/GOW7VXRfFx38qRa5+18NNwGfwm5IHJhkfFBcWX1B8ydd
        vltFcPDnI892oa+xtGMx/ge4CfgwdkOi5lOrNrk9gzgFKeNQXFl9frDKd6uosfsQ+hozAbn7/w1UBHoA
        uyFx8OGWLq88VJo3AHFm9QXNj1W+W0U3/Gk7+voyAXgrODwFuAu7IXHy7Ve2u90p3A3EmdV3kvkRy3er
        aNfAsDs3h7+ujCDH76iTUeAm9IbETNp2A3Fm9fnBLt+tov/asgd9PZlD/ls19Wow3XcDcWf1Bc2PWb5b
        RXBDd+GqjejryBS8V4NZrDAPuyFJoutuIO6svqD5sct3q2jNviPo68ckvJeDzmp48cxafD24TruBuLP6
        guhQvltFi9pfR183xjD5enBQrR4Iwt4NJJHVF0SH8t0qOjhSdC9spqo/UWExvrtuUpbDX8JuECYYu4Ek
        svqC6FK+W0VLd+xHXydGwfhafwB4HL1ByCS5G0giqy+ILuW7VfW3a7egrxHDWPaXAMD4v2nQIC2IezeQ
        RFZfEJ3Kd6tIHBpAXxfGwcR9JwKA7RS+ht4gjYhjN5BUVl8Q3cp3q+jHhd3oa8I05K7/mhMBYE5zxwew
        G6QjUe0GksrqC6Jb+W4VDRbH3AUr6eBP1GRzvP5EAFjY2nq67fAh7EbpSLW7gaSy+oLoWL5bRXCiE3sN
        GAfjg3UNDafV+SW3BO3oDdOYsLuBJLP6guhYvltV17/8Z/S5Nw4m2uqCkgHgUfSGaU6lu4Eks/qmmF/T
        8t0q2jkw7GY1mHfjYOKRKQFAfvNO9IalhJl2A0ln9fnRuXy3in6+qRd9rk0k6/DbpwYAJ/9J7IalieBu
        ACOrz4/O5btVVJR9uaSVDv7EQSYnPjb1EoBtfiPdCAzPzW073N5jQ25P7x408+tevltFq/b2o8+tmfCh
        E2cApu4CxDr8BqaPxfkdaOZPQ/luFd22/jX0eTURy+FrpjX/+C5A/Dt2A9PKVoSbfmko362ivmE6+BMj
        S0oGAJvxL2nQwFSS9C4gLeW7VfTw9n3o82kq8kP+qpIBYE5zx7uxG5hmktoFpKV8t6o+t2Yz+lwaCePH
        Lbb+XSUDwMQuoIDe0JSSxC4gTeW7VbT+4DH0eTQVi/GOGc3v3Qdw+EPYDU0zce4C0la+W0X3iF3oc2gw
        PysbALIsf5kGDU0tce0C0la+W0UDxTH34hZ63XdcyB3AwrIBYF5D4Q1yF9CP3dg0E/UuII3lu1X0xK4+
        9LkzF354QVvbGWUDwMR9gKfxG5xeotwFpLF8t6qufWkb+tyZivcewEplMfFd7AannSh2AWkt362i7UeH
        6OBPnDQVbqk4ANjPtL9XbhnG0BudYqLYBaS1fLeKHtzYgz5n5sLH6p2ucysOAN4uwOFr8BuebqrZBaS1
        fLeK4ODPx57bgD5fxsL4c6HM7+0CGP8+esNTjuouIM3lu1XUsucw+lyZjPwwvzV0AJjdWDhH/nARu/Fp
        Z1t3uF3AoZRX8FXRra/uQJ8ngylChm/oADCxC2jVoAOpJuwuYPXGbe7q3fvd4TGzjveW0t6hUfeCHB38
        iQ0mViiZH0RPA6IhzL2Alzs3uu2i4K7p2lQTgeBX2/aiz4/JSA/fpBwA6lu6zoIKotidSDthdgGTAWAS
        0wPBFc/TwZ8YGTivkb9DOQB4uwCH/16DjqSeSncBwQBgciB4pe8o+ryYDBT6rcr8oGxT4dPYHTGBSncB
        pQKAiYHgLr4TfV7MJv/JqgNAneueIi8DNuN3Jv1UsgsoFwBMCQTHimPuRSvo4E9cWI7YBN6tPgDUeS8P
        vRu7QyZQyS6g0gCQ9kAAFZWx58NomLgzEvODzl/Jz7aYGEHvlAGU2wWEDQD+QPDMzvQEgq+s24o+F6Yi
        r/2HlZ/9l5L8xY9hd8wEyu0CVAPAb18puPNywl3YutF9dIfegWDzkSH0eTAZ+WH920jND8oyPh9qimF3
        zgRm2gWoBIBJ8/v/D50Dwf0butHnwGhy4qLIAwBIRpYW9M4ZwEy7gLABYDrz+9EtEIzIdnz0WTr4ExuM
        O7GYH5TJFa5E76AhlNoFhAkA5czvR5dA4PTQwZ84gZJ+sQUAEFQWxe6kCZTaBVQaAMKY3w92ILipjQ7+
        xIXliHxkj/5KyWaFG7A7agrT7QIqCQCq5veDEQh6B0fcejr4ExtWLn9drOb31NBwmsXERuzOmsB0u4By
        ASAK8/tJMhD8cisd/IkLL/FHejP+AFDnXQZ8HbvDphDcBcwUAKI2v5+4AwH81stWb0Ifb1OxHH5NIub3
        dK97KlxvYHfaBIK7gFIBIE7z+4krEKzbTwd/YoMJAZ5MLgDUwS6g8BX0jhuCfxcwXQBIyvx+og4Ed+Tp
        4E9cZJz8FxM1vyfXPUVuO9qxO28C/l1AMABgmN9PFIGgf7TozqeDP/HARFvsd/5LiV4jFh2TuwB/AMA2
        v59qAsGy1+jgT1xYOf4ZFPNPynb4cuxBMIHJXcBkANDJ/H5UAsHVa+ngTxyEettPXLKYyMggMIQ9GCYA
        uwAIALqa30+lgWBT/yB6W03EO/G3otPG9r8neqV4NMAuYGn7Bu3N76dcILiviw7+xIH84L0f2/cnNPep
        DX8ldwE92INiAhc247dBhUtXbXL/7/U+d/T4XwLBkAwKf72yC71txsFEr8U2vxXb9yfJyvEb0QeGQMe/
        I2jsPoTeHhPJOOIb2H6fKngsSMeFiQlgR3DlGir5HTnwnj+sx37llG3uOF8GgaPog0QQZnIMbrpj+3xG
        WYz/UIOBIgjzyPE7sP1dVgtbW0+H7CT0wSIIg4CsW/AWtr8rUsbJf5iqCBNENMAz/9jq/MUl2fB7sAeO
        IEzAcsRd2H4Or3vdU+GOJfbgEUSakeZfnVihj6hlsfwsi/ED2INIECnl4JyWwnnYPq5KVDeAINTINolr
        sf0biSyHL8UeTIJIE9Izv8H2bWSa3br9TTYTr2IPKkGkAXjkN6vhxTOxfRup3t/YOdtifD/24BKEzsA9
        M8ioxfZrLILqJbKTRexBJgg94WPw9i1sn8YqGeHuxR9ogtAR/iNsf8YvLz9APIU/2AShEYw/oe0pv6gF
        Nzhkp9ehDzpBaIDliFfmN3e8BduXicpi698ltzxbsQefIDCxmPjz+Sv52dh+RJHdKC6Qg9CHPQkEgYF3
        xz/H67F9iCo5CAupqjBRa8BpWXivBrb/tBCkPNr0eJCoHYqQIo/tO61ks8IN8BxUg8khiPhg/HjWETdj
        +01LZZ3CbegTRBAxYrH8P2H7TGvBAGFPEkHEgcX43dj+SoXkYP0Ee7IIImIWY/sqVaLqwoQpyLX8Y2w/
        pVKWw2+lG4NEamH8uOWIRdg+SrVk9Py6xcQo+mQSRDiK8Lo8bP8YIcgT8Eoj408qQVQAH6Ln/BFLBoGP
        yyCwD39yCWJG+jKOuBTbL0YqkytY8rpqswaTTBBTgIM9NZ/bH7eyyze+U+4EXsCebILwYzH+cs2e6kta
        5y5ve7PliD9iTzpBeDD+hHFFPLWX654ykStAh4gIHBg/Lr8ugSpX2HaoWWVy4lM2E3vQFwNRU0CF64wj
        rsBe/6Q6Lwi8z3L4n7AXBVEr8PXGlu5Oq7w6g0w8gr84CJOBN/bAi26w1zuphKyc+DK9kJSIHCYO2U7h
        a9jrm1SB4JLAZrwVfdEQZsD4c/Cma+x1TQojeErgiEWUQkyoMnEGZTHd5U+xLNZ5Mb2YlAgL1Oq3c+Ii
        7PVLikALW1tP93YDjB/BXliE9gxAfkldQ8Np2OuWFLHsRj5H7gZWaLDICD1ZVd/UkcVep6Q4BfcGcvxG
        GQh6NVhwhBbwHrtJfBN7aZISFLyLTU7+YpvxQfwFSGAAL+eQ/MJim9+KvR5JSPKOGDuiAXsxEgnD+DPS
        /Bns9UfSRHIbeDk9LTAfuLufbSp8Gnu9kTSVFwgcvh57oRIRw3jBcvg1cA8Ie42RdJd31FhcJT8t8ugL
        l6gKafou7wYfPdYjhZZcNBbj11MgSB/S+O1WLn8dZfGRIlGWFT4BN44mikCgL3CipPFfgN0bbfVJsSjL
        +Hy5yB6lMwb6AHMhWTq3Kf9B7PVBqhGd18jfIXcD37GZENgGqFXkpdkmSNud09zxbuz1QKphZZr5ArkY
        fy23nkexTWE+fMj28jb45bTNJ2mlyV2BDAYrbSpWGiVFGVxbso64efaT7W/HnmcSqazqW7rOgsdPExln
        9G7D0PAx74aeIxbNbiycgz2fJJKy5q7Y8J6JncEf5aLuxzeXrvDD8pr+D3ZT4ZZ6p+tc7HkjkSLXgra2
        M8ZLmfMHKL/AK6/dIb8ugffpwdhgzw+JlKjgJNp4+rFYDNe5Jp9O9C6FmGjzTuA5/BqLrX8X9viTSFoJ
        Sk5D0lHW4bfDs+3xA0renW90A4cCAplsuzT7b6Ev3tud2eY3Yo8viZQ6QUkzu1FcIE10rdwy/1Qa63fS
        YGvln7uxje61QbZF/nmZbNd9GYd/FdoKbcYeNxLJeHk7hhyvzzblPzdR6ehOacYlctfwP5YjnpSfwM9D
        spL887Zx+D75933++ogTf+6Dv5v8d97PyJ+F3wG/S/79z8Z/d/5bmVzhSvg/6QUZ6df/A0yn1igx3LcU
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>